// <auto-generated />
using System;
using CR_YPTO_TPF.DAL.framework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CR_YPTO_TPF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CR_YPTO_TPF.Domain.alerta", b =>
                {
                    b.Property<string>("idUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("idUsuario");

                    b.Property<string>("idCrypto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("idCrypto");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<double>("umbralAlerta")
                        .HasColumnType("float")
                        .HasColumnName("umbralAlerta");

                    b.HasKey("idUsuario", "idCrypto")
                        .HasName("alerta_pkey");

                    b.ToTable("alerta", (string)null);
                });

            modelBuilder.Entity("CR_YPTO_TPF.Domain.cryptohistoria", b =>
                {
                    b.Property<int>("idcryptohistoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idcryptohistoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idcryptohistoria"));

                    b.Property<string>("PriceUSD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<string>("idCrypto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("idCrypto");

                    b.Property<string>("idUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("idUsuario");

                    b.Property<string>("precio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("precio");

                    b.HasKey("idcryptohistoria")
                        .HasName("cryptohistoria_pkey");

                    b.ToTable("cryptohistoria", (string)null);
                });

            modelBuilder.Entity("CR_YPTO_TPF.Domain.usuario", b =>
                {
                    b.Property<string>("idUsuario")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("idUsuario");

                    b.Property<bool>("activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("clave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("clave");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("correo");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<double>("umbral")
                        .HasColumnType("float")
                        .HasColumnName("umbral");

                    b.HasKey("idUsuario")
                        .HasName("usuario_pk");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("CR_YPTO_TPF.Domain.usuariocrypto", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IdUsuario");

                    b.Property<string>("IdCrypto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IdCrypto");

                    b.Property<string>("usuarioidUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdUsuario", "IdCrypto")
                        .HasName("usuarioCrypto_pkey");

                    b.HasIndex("usuarioidUsuario");

                    b.ToTable("usuarioCrypto", (string)null);
                });

            modelBuilder.Entity("CR_YPTO_TPF.Domain.usuariocrypto", b =>
                {
                    b.HasOne("CR_YPTO_TPF.Domain.usuario", "usuario")
                        .WithMany("CriptomonedasFavoritas")
                        .HasForeignKey("usuarioidUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("CR_YPTO_TPF.Domain.usuario", b =>
                {
                    b.Navigation("CriptomonedasFavoritas");
                });
#pragma warning restore 612, 618
        }
    }
}
